import { useState, useRef } from "react";
const items = [
  {
    title: "1. Is Veil a decentralized exchange (DEX)?",
    content:
      "No, Veil is not a decentralized exchange (DEX) platform. Instead, it functions as a protocol and bridge between different blockchain networks, enabling cryptocurrency swaps and transactions. While it's not a DEX, Veil emphasizes privacy, security, and community engagement.",
  },
  {
    title: "2. How can I participate in the Veil Revenue Share Program?",
    content:
      "To participate in the Veil Revenue Share Program, you need to hold a minimum amount of Veil tokens in your wallet. The specific amount required for eligibility is determined by the platform and is transparently communicated to the community. The program distributes a share of the exchange's revenue, including trading fees from both the Veil token and the exchange, to eligible token holders regularly.",
  },
  {
    title: "3. What percentage of the Trading fee and token fee is allocated towards the Veil Revenue Share Program?",
    content:
      "20% of the total trading fees generated by the Veil platform and the Veil Token are allocated to the Veil Revenue Share Program. This includes both the trading fee from the Veil token and the trading fee from the exchange. This revenue is distributed proportionally among eligible token holders as part of the program, allowing them to earn a share of the exchange's success.",
  },
];
export function Faqs() {
  const [openIndex, setOpenIndex] = useState(null);
  const contentRefs = useRef([]);

  const toggleAccordion = (index) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="flex flex-col bg-[#16161c] w-full items-center pt-32">
      <p className="my-10 pt-10 text-5xl text-center font-bold font-spaceGrotesk text-transparent bg-clip-text bg-gradient-to-r from-white via-gray-200">
        {" "}
        FAQs{" "}
      </p>
      <p className="flex font-spaceGrotesk font-bold text-xl mb-2 text-[#8270f1]">
        Answering the most popular questions
      </p>

      <div className="mt-10 mb-20">
        {items.map((item, index) => (
          <div key={index} className={`border w-[926px] border-[#343445] rounded-md ${index === 0 ? "border-b-0 rounded-b-none" : index === items.length - 1 ? 'rounded-t-none' : 'rounded-none'}`}>
            <button
              onClick={() => toggleAccordion(index)}
              className={`font-spaceGrotesk text-white w-full flex justify-between items-center p-4 text-left bg-[#202029] focus:outline-none + ${(index === openIndex ? "bg-[#2a2a36] text-[#7d6ce8]" : "")}`}
            >
              <span className={`font-medium + ${(index === openIndex ? "bg-[#2a2a36] text-[#7d6ce8]" : "")}`}>{item.title}</span>
              <svg
                className={`w-5 h-5 transform transition-transform duration-300 text-white ${
                  openIndex === index ? "rotate-180" : ""
                }`}
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M19 9l-7 7-7-7"
                />
              </svg>
            </button>
            <div
              ref={(el) => (contentRefs.current[index] = el)}
              className={`transition-all duration-300 overflow-hidden ${
                openIndex === index
                  ? "max-h-screen opacity-100"
                  : "max-h-0 opacity-0"
              }`}
              style={{
                maxHeight:
                  openIndex === index
                    ? contentRefs.current[index]?.scrollHeight
                    : 0,
              }}
            >
              <div className="p-4 text-white bg-[#202029]">{item.content}</div>
            </div>
          </div>
        ))}
      </div>
    </section>
  );
}
